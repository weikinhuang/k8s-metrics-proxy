kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: {{ .Chart.Name | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    app.kubernetes.io/component: metrics-proxy
    app.kubernetes.io/part-of: {{ .Chart.Name | quote }}
    app.kubernetes.io/managed-by: helm
  name: {{ printf "%s-%s" (include "metrics-proxy.fullname" .) "config" | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace }}
data:
  servers.json: |
    {{ toJson .Values.metricsServers | trim | indent 4 | trim }}

  haproxy.cfg: |
    ###############################################################################
    # Config
    ###############################################################################

    global
      log           stdout format raw local0
      log           stderr format raw local1 warning
      pidfile       /tmp/haproxy.pid

      maxconn  8000

      # user bindings
      #group nogroup
      #user nobody
      unix-bind user nobody group nogroup

      # enable multi-threading
      # when this is set to single threaded, using resolvers will cause high cpu usage to occur
      nbproc    1
      nbthread  2

      # node info
      description   "metrics-proxy"

      # ssl
      ssl-default-bind-ciphers      TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
      ssl-default-bind-options      no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
      ssl-default-server-ciphers    TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
      ssl-default-server-options    no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
      tune.ssl.default-dh-param     2048
      # lower the record size to improve Time to First Byte (TTFB)
      tune.ssl.maxrecord            1419
      # async ssl offload (requires openssl@1.1.0)
      ssl-engine                    rdrand  # intel engine available in openssl

    defaults
      balance   roundrobin
      log       global
      maxconn   8000

      # ignore dns lookups on boot, never fail on address resolution
      default-server  init-addr last,libc,none

      # tcp options
      option dontlognull
      option splice-response
      option clitcpka
      option srvtcpka
      option tcp-smart-accept
      option tcp-smart-connect
      option contstats

      # http options
      option http-keep-alive
      option http-server-close
      option redispatch

      retries 3

      timeout http-request    5m
      timeout http-keep-alive 5m
      timeout connect         10s
      timeout client          10m
      timeout client-fin      5m
      timeout tunnel          60m         # timeout to use with WebSocket and CONNECT
      timeout server          10m
      timeout tarpit          15s
      timeout queue           60s
      timeout check           60s

      # Insert a unique request identifier is the headers of the request passed to the backend
      unique-id-format %{+X}o\ %ci:%cp_%fi:%fp_%Ts_%rt:%pid:%H
      unique-id-header X-Unique-ID

    resolvers k8s
      parse-resolv-conf
      resolve_retries         3
      hold other              30s
      hold refused            30s
      hold nx                 30s
      hold timeout            30s
      hold valid              10s
      hold obsolete           0s

    ###############################################################################
    # Stats
    ###############################################################################

    listen stats
      bind                  "*:9090"
      mode                  http
      stats                 enable
      stats                 show-desc
      stats                 show-legends
      stats                 uri /
      monitor-uri           /healthz
      http-request          use-service prometheus-exporter if { path /metrics }
      no log

    ###############################################################################
    # Null Backends
    ###############################################################################

    backend default_backend
      mode http

      # http mode options
      stats   enable
      option  forwardfor except 127.0.0.0/8

      option httpchk GET /healthz

      server proxy 127.0.0.1:8081 check maxconn 1024 weight 1

    ###############################################################################
    # HTTP Frontends
    ###############################################################################

    frontend default_frontend
      bind "*:8443" ssl crt /etc/ssl/haproxy/server.pem verify none
      bind "*:8080"

      mode http

      # http mode options
      stats   enable

      # configure logging
      option dontlog-normal
      option httplog

      # defaults
      default_backend default_backend

      # for testing rewrites
      # http-request replace-header x-forwarded-uri (.*)/apis/foo.metrics.k8s.io/(.*) \1/apis/custom.metrics.k8s.io/\2
      # http-request replace-uri (.*)/apis/foo.metrics.k8s.io/(.*) \1/apis/custom.metrics.k8s.io/\2

      # this is the verify request
      use_backend default_backend      if { path /apis/custom.metrics.k8s.io/v1beta2 }
      use_backend default_backend      if { path /apis/custom.metrics.k8s.io/v1beta1 }
      use_backend default_backend      if { path /apis/custom.metrics.k8s.io }
      use_backend default_backend      if { path /apis }
      use_backend default_backend      if { path_beg /openapi }
      use_backend default_backend      if { path /healthz }

      {{ range $server := .Values.metricsServers }}
      use_backend {{ $server.name }}.backend      if TRUE {{ if $server.pathMatch }}{ path_reg {{ $server.pathMatch }} } {{end}}
      {{- end }}

    ###############################################################################
    # HTTP Backends
    ###############################################################################

    {{ range $server := .Values.metricsServers }}
    backend {{ $server.name }}.backend
      mode http

      # http mode options
      stats   enable

      {{- if $server.healthcheck }}
      option httpchk GET {{ $server.healthcheck.path }}
      {{- end }}

      server {{ $server.name }} {{ $server.serviceName }}.{{ $server.serviceNamespace }}.svc.cluster.local:{{ $server.targetPort }} {{ if $server.healthcheck }}check{{ else }}no-check{{ end }} maxconn 1024 weight 1 ssl verify none crt /etc/ssl/haproxy/server.pem
    {{ end }}
